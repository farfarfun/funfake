[build-system]
requires = [ "setuptools>=61.0", "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "funfake"
version = "1.0.9"
description = "A lightweight Python library for generating realistic HTTP headers to simulate various browsers and operating systems"
readme = "README.md"
requires-python = ">=3.7"
dependencies = []
keywords = [ "http", "headers", "user-agent", "fake", "browser", "crawler", "requests",]
classifiers = [ "Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing",]
[[project.authors]]
name = "牛哥"
email = "niuliangtao@qq.com"

[[project.authors]]
name = "farfarfun"
email = "farfarfun@qq.com"

[[project.maintainers]]
name = "牛哥"
email = "niuliangtao@qq.com"

[[project.maintainers]]
name = "farfarfun"
email = "farfarfun@qq.com"

[project.license]
text = "MIT"

[project.urls]
Organization = "https://github.com/farfarfun"
Repository = "https://github.com/farfarfun/funfake"
Releases = "https://github.com/farfarfun/funfake/releases"

[project.optional-dependencies]
dev = [ "pytest>=6.0", "pytest-cov>=2.0", "black>=22.0", "flake8>=4.0", "mypy>=0.900", "pre-commit>=2.0",]
test = [ "pytest>=6.0", "pytest-cov>=2.0", "requests>=2.20.0",]

[tool.setuptools]
license-files = []

[tool.mypy]
python_version = "3.6"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = [ "tests",]
python_files = [ "test_*.py", "*_test.py",]
addopts = [ "--strict-markers", "--strict-config", "--cov=funfake", "--cov-report=term-missing", "--cov-report=html", "--cov-report=xml",]

[tool.coverage.run]
source = [ "src/funfake",]
omit = [ "*/tests/*", "*/test_*",]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "def __repr__", "raise AssertionError", "raise NotImplementedError",]

[tool.setuptools.packages.find]
where = [ "src",]
